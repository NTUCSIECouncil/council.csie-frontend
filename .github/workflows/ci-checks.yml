name: CI Checks for PRs & Commits

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Cancel in-progress jobs if there are multiple commits
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: 🧐 Lint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: 🛠️ Prepare env file
        run: |
          if [ -f .env.example ]; then cp .env.example .env; fi

      - name: 🔨 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install

      - name: 🔬 Run linter
        run: pnpm run lint

  format:
    name: ⛏️ Format
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: 🛠️ Prepare env file
        run: |
          if [ -f .env.example ]; then cp .env.example .env; fi

      - name: 🔨 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install

      - name: 🔬 Run formatter
        run: pnpm run format

  type-check:
    name: 🔍 Type Check
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: 🛠️ Prepare env file
        run: |
          if [ -f .env.example ]; then cp .env.example .env; fi

      - name: 🔨 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install

      - name: 🔎 Run type checker
        run: pnpm run type-check

  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: 🛠️ Prepare env file
        run: |
          if [ -f .env.example ]; then cp .env.example .env; fi

      - name: 🔨 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: 🚀 Restore NextJS cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: 📥 Install dependencies
        run: pnpm install

      - name: 📦 Build application
        run: pnpm run build
