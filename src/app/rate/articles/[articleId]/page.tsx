'use client';
import React, { useState, useEffect } from 'react';
import styles from '@/styles/rate.module.css';
import FullScreen from '@/components/FullScreen';
import { Grid } from '@mui/material';

import Markdown from 'react-markdown';

/*
interface Article {
  title: string;
  lecturer: string;
  tag?: string[];
  semester?: string;
  grade?: number;
  categories?: string[];
  content?: string;
  creator: User;
  createdAt?: Date;
  updatedAt?: Date;
}
*/

interface Params {
  articleId: string;
};

const Article: React.FC<{ params: Params }> = ({ params }) => {
  const [article, setArticle] = useState<any | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const fetchArticle = async (): Promise<void> => {
      // fetch API according to $articleId
      setIsLoading(true);
      // let article;
      const response = await fetch(`/api/articles/${params.articleId}`);

      const debug = true;
      let article;
      if (debug) {
        article = {
          title: 'ÊôÆÁâ©',
          lecturer: 'ËÉ°Âæ∑ÈÇ¶',
          rate: '5',
          grade: 'A+',
          content: `
          # ËÉ°Âæ∑Âπ´
          ÂïäÂïäÂïäÊàëÊÑõ‰Ω†ËÉ°Âæ∑Âπ´  
          ËÉ°Âæ∑Âπ´Âπ´Âøô
          ## ÊúÄÁâõÈÄºÁöÑËÄÅÂ∏´
          **‰Ω†Ë™™ÂæóÂ∞ç**Ôºå*‰ΩÜÊòØÈÄôÂ∞±ÊòØÂç°Ê°ëÂ∏ù*Ôºå***ü§îHP 4700ÔºåË≠∑Áî≤ 329ÔºåÈ≠îÊäó 201ÁöÑËã±ÈõÑ***„ÄÇÊúâ‰∏çÂèØÈòªÊìãü§öÔºåÊúâË≠∑ÁõæüëåÔºåÈÇÑËÉΩÈÅéÁâÜ‚úåÔ∏è„ÄÇÊúâÊéßÂà∂ü§ôÔºåÁîöËá≥ÂÜ∑ÂçªÊôÇÈñìÂè™Êúâ1Áßí‚úäÔºåÂè™Ë¶Å15ÈªûËóçüëç„ÄÇËΩâÊèõÂßøÊÖãÊôÇÁîöËá≥ÂèØ‰ª•Âà∑Êñ∞WÁöÑcdüëàÔºåÈÇÑÊúâ‚úåÔ∏èÁúüÂØ¶ÂÇ∑ÂÆ≥„ÄÇÁÑ∂ÂæåÔºåË≠∑Áî≤ÂíåÈ≠îÊäóÊèêÂçáÂæåÈÇÑËÉΩÁç≤ÂæóÊäÄËÉΩÂä†ÈÄüüëêÔºåÁ∏ÆÁü≠QÁöÑcdüôåÔºåÈÇÑÁ∏ÆÁü≠ÈáãÊîæÊôÇÈñìüò®ÔºåÁÑ∂ÂæåÈÇÑÊúâÊîªÊìäÂäõüò∞„ÄÇWÂ∞±üëäüèøüò≠üëäüèøÂïäÂïäÂïäÂïäÂïäÂïäüñêÔ∏èüò≠ü§ö
          `.split('\n').map(it => it.trimStart()).join('\n')
        };
      } else {
        if (!response.ok) {
          // windows alert
          if (response.status === 404) {
            setError('Article not found.');
          } else {
            setError('An error occurred while fetching the article.');
          }
          return;
        }
        article = await response.json();
      }

      setArticle(article);
      setError(null);
    };

    fetchArticle()
      .catch(error => {
        console.log(error.message); // 'An error has occurred: 404'
        setError('Failed to fetch article due to a network error.');
      })
      .finally(() => {
        setIsLoading(false);
      });
    console.log(params.articleId);
  }, [params.articleId]);

  // render list of search results provided by $article
  // return JSON.stringify(article, null, 2);
  if (isLoading) {
    return <div style={{ fontSize: '24px', color: 'var(--text)' }}>Loading...</div>;
  }

  if (error !== null && error !== '') {
    return <div style={{ fontSize: '24px', color: 'var(--text)' }}>{error}</div>;
  }

  return (
    <FullScreen className={styles.articlePage}>
      <div className={styles.articleTitle}>
        <div style={{ fontSize: '32px', fontWeight: 600, color: 'white' }}>{article.title}</div>
        <div style={{ fontSize: '28px', fontWeight: 600, color: 'white' }}>
          111-1
          {' '}
          {article.lecturer}
        </div>
      </div>
      <hr style={{ width: '65%' }} />
      <div className={styles.bodyArticle} style={{ fontSize: '28px', color: 'white' }}>
        <Grid container direction="row" gap="1rem" alignItems="end">
          <div style={{ fontWeight: 600, color: 'white' }}>{article.rate}</div>
          <div style={{ fontWeight: 600, color: 'white' }}>Ë©ïÂÉπÂπ≥Âùá</div>
        </Grid>
        <Grid container direction="row" gap="1rem" alignItems="end">
          <div style={{ fontWeight: 600, color: 'white' }}>Á≠âÁ¨¨</div>
          <div style={{ fontWeight: 600, color: 'white' }}>{article.grade}</div>
        </Grid>
        <div style={{ marginTop: '2rem' }}>
          <Markdown>
            {article.content}
          </Markdown>
        </div>
      </div>
    </FullScreen>
  );
};

export default Article;
